// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders 1`] = `
<div
  className="App"
>
  <header
    className="logo-container grid-box"
  >
    <div
      className="logo-background"
    >
      <img
        alt="logo"
        src="logo.png"
      />
    </div>
  </header>
  <div
    className="language-input grid-box"
  >
    <label
      className="input-label"
      htmlFor="langinput"
    >
      Select a language to resize
    </label>
    <div
      className=" css-vkzoxc-container"
      id="langinput"
      onKeyDown={[Function]}
    >
      <div
        className="language-input__control css-10k5ixo-control"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="language-input__value-container language-input__value-container--has-value css-1j36x9m-ValueContainer"
        >
          <div
            className="language-input__single-value css-1uccc91-singleValue"
          >
            中文
          </div>
          <div
            className="css-b8ldur-Input"
          >
            <div
              className="language-input__input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "label": "input",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="language-input__indicators css-1hb7zxy-IndicatorsContainer"
        >
          <span
            className="language-input__indicator-separator css-1okebmr-indicatorSeparator"
          />
          <div
            aria-hidden="true"
            className="language-input__indicator language-input__dropdown-indicator css-tlfecz-indicatorContainer"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-6q0nyr-Svg"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="mfs-input grid-box"
  >
    <label
      className="input-label"
      htmlFor="mfsinput"
    >
      Min Font-Size
    </label>
    <span
      className="react-numeric-input"
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      style={
        Object {
          "background": "#E2E2E2",
          "borderRadius": ".3rem .3rem .3rem .3rem",
          "boxShadow": "0 0 1px 1px #fff inset, 1px 1px 5px -1px #000",
          "display": "inline-block",
          "fontSize": 15,
          "padding": ".1rem .1rem .1rem .1rem",
          "position": "relative",
          "width": "7.5rem",
        }
      }
    >
      <input
        className="react-numeric-input-container"
        id="mfsinput"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onInput={[Function]}
        onKeyDown={[Function]}
        onSelect={[Function]}
        size={3}
        style={
          Object {
            "WebkitAppearance": "none",
            "border": "1px solid #ccc",
            "borderRadius": 2,
            "boxSizing": "border-box",
            "color": "#988869",
            "display": "block",
            "fontSize": "inherit",
            "fontWeight": 70,
            "lineHeight": "normal",
            "margin": "auto",
            "padding": ".2rem 3.4ex .2rem 3.4ex",
            "paddingLeft": " 3.4ex",
            "paddingRight": "3.4ex",
            "textAlign": "center",
            "textShadow": "1px 1px 1px rgba(0, 0, 0, 0.1)",
            "width": "100%",
          }
        }
        type="text"
        value="0"
      />
      <b
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "background": "rgba(0,0,0,.1)",
            "borderColor": "rgba(0,0,0,.1)",
            "borderRadius": 2,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 2,
            "boxShadow": "none",
            "cursor": "default",
            "position": "absolute",
            "right": 2,
            "textAlign": "center",
            "top": 2,
            "transition": "all 0.1s",
            "width": "3.3ex",
          }
        }
      >
        <i
          style={
            Object {
              "background": "rgba(0,0,0,.7)",
              "height": 2,
              "left": "50%",
              "margin": "-1px 0 0 -5px",
              "position": "absolute",
              "top": "50%",
              "width": 10,
            }
          }
        />
        <i
          style={
            Object {
              "background": "rgba(0,0,0,.7)",
              "height": 10,
              "left": "50%",
              "margin": "-5px 0 0 -1px",
              "position": "absolute",
              "top": "50%",
              "width": 2,
            }
          }
        />
      </b>
      <b
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "background": "rgba(0,0,0,.1)",
            "borderColor": "rgba(0,0,0,.1)",
            "borderRadius": 2,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 2,
            "boxShadow": "none",
            "cursor": "default",
            "left": 2,
            "position": "absolute",
            "right": "auto",
            "textAlign": "center",
            "top": 2,
            "transition": "all 0.1s",
            "width": "3.3ex",
          }
        }
      >
        <i
          style={
            Object {
              "background": "rgba(0,0,0,.7)",
              "height": 2,
              "left": "50%",
              "margin": "-1px 0 0 -5px",
              "position": "absolute",
              "top": "50%",
              "width": 10,
            }
          }
        />
      </b>
    </span>
  </div>
  <div
    className="error grid-box"
  >
    <div
      className="error-content"
    >
      Please input a positive integer
    </div>
  </div>
  <div
    className="more-info-container"
  >
    <div
      className="show-more"
      onClick={[Function]}
    >
      Show More Info
    </div>
    <div
      className="inactive"
    >
      <p>
        Hi there. I'm Ryan, the sole developer of Hanzisize. I've spent hundreds of hours working on Hanzisize while making it available for anyone to use for free. If you are able, please consider donating so I can continue to improve this tool for all of us. If you're not able to donate, please leave a review of this extension so more people can find it. Thanks for your support!
      </p>
      <div
        className="coffee-button"
      >
        <a
          className="bmc-button"
          href="https://www.buymeacoffee.com/djmouthguard"
          rel="noopener noreferrer"
          target="_blank"
        >
          <img
            alt="Buy me a matcha latte"
            src="bmc-new-btn-logo.svg"
          />
          <span>
            Buy me a matcha latte
          </span>
        </a>
      </div>
      <div
        className="bitcoin-info"
      >
        <p>
          or donate 
          <span
            onClick={[Function]}
          >
            Bitcoin
          </span>
        </p>
        <img
          alt="a bitcoin qr code"
          className="inactive"
          height="100"
          src="btcdonation.jpeg"
          width="100"
        />
      </div>
      <p
        className="github-info"
      >
        You can also contribute code or report bugs on 
        <a
          href="https://github.com/rjpeterson/Hanzisize"
          rel="noopener noreferrer"
          target="_blank"
        >
          Github
        </a>
      </p>
    </div>
  </div>
</div>
`;
